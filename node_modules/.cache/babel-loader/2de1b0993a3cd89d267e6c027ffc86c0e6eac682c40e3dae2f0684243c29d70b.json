{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/dlt-react-folder/rrd-project/src/NewPost.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport api from './api/posts';\nimport DataContext from './context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = () => {\n  _s();\n  // convert the destructured props to useState p\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const {\n    posts,\n    setPosts\n  } = useContext(DataContext);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n    const date = format(new Date(), 'MMMM dd, yyyy pp');\n    const newPost = {\n      id,\n      title: postTitle,\n      date,\n      body: postBody\n    };\n    try {\n      const response = await api.post('/posts', newPost);\n      const allPosts = [...posts, response.data];\n      setPosts(allPosts);\n      setPostTitle('');\n      setPostBody('');\n      navigate('/');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newPostForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"postTitle\",\n        type: \"text\",\n        required: true,\n        value: postTitle,\n        onChange: e => setPostTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postBody\",\n        children: \"Post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postBody\",\n        required: true,\n        value: postBody,\n        onChange: e => setPostBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPost, \"kFb1uVnsc/GaqC/HGt/YWro36v0=\", false, function () {\n  return [useNavigate];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["useState","useContext","useNavigate","format","api","DataContext","jsxDEV","_jsxDEV","NewPost","_s","postTitle","setPostTitle","postBody","setPostBody","posts","setPosts","navigate","handleSubmit","e","preventDefault","id","length","date","Date","newPost","title","body","response","post","allPosts","data","err","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","required","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/dlt-react-folder/rrd-project/src/NewPost.jsx"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport api from './api/posts';\nimport DataContext from './context/DataContext';\n\nconst NewPost = () => {\n    // convert the destructured props to useState p\n    const [postTitle, setPostTitle] = useState('');\n    const [postBody, setPostBody] = useState('');\n    const { posts, setPosts } = useContext(DataContext);\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\n        const date = format(new Date(), 'MMMM dd, yyyy pp');\n        const newPost = { id, title: postTitle, date, body: postBody };\n        try {\n            const response = await api.post('/posts', newPost);\n            const allPosts = [...posts, response.data];\n            setPosts(allPosts);\n            setPostTitle('');\n            setPostBody('');\n            navigate('/');\n        } catch (err) {\n            console.log(`Error: ${err.message}`);\n        }\n    }\n\n    return (\n        <main className=\"NewPost\">\n            <h2>New Post</h2>\n            <form className=\"newPostForm\" onSubmit={handleSubmit}>\n                <label htmlFor=\"postTitle\">Title:</label>\n                <input\n                    id=\"postTitle\"\n                    type=\"text\"\n                    required\n                    value={postTitle}\n                    onChange={(e) => setPostTitle(e.target.value)}\n                />\n                <label htmlFor=\"postBody\">Post:</label>\n                <textarea\n                    id=\"postBody\"\n                    required\n                    value={postBody}\n                    onChange={(e) => setPostBody(e.target.value)}\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </main>\n    )\n}\n\nexport default NewPost"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}