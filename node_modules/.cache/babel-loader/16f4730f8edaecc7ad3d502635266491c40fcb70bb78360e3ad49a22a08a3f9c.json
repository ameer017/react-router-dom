{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/dlt-react-folder/rrd-project/src/EditPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPost = ({\n  posts,\n  handleEdit,\n  editBody,\n  editTitle,\n  setEditBody,\n  setEditTitle\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const post = posts.find(post => post.id.toString() === id);\n  useEffect(() => {\n    if (post) {\n      setEditTitle(post.title);\n      setEditBody(post.body);\n    }\n  }, [post, setEditTitle, setEditBody]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewPost\",\n    children: [editTitle && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"newPostForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTittle\",\n          children: \" Edit Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: editTitle,\n          onChange: e => setEditTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postBody\",\n          children: \" Edit Body \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postBody\",\n          required: true,\n          value: editBody,\n          onChange: e => setEditBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => handleEdit(post.id),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true), !editTitle && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well, that's disappointing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Visit our website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","posts","handleEdit","editBody","editTitle","setEditBody","setEditTitle","_s","id","post","find","toString","title","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","type","required","value","onChange","target","onClick","to","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/dlt-react-folder/rrd-project/src/EditPost.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nconst EditPost = ({posts, handleEdit, editBody, editTitle, setEditBody, setEditTitle}) => {\r\n    const { id } = useParams();\r\n    const post = posts.find(post => (post.id).toString() === id)\r\n\r\n    useEffect(() => {\r\n        if(post) {\r\n            setEditTitle(post.title)\r\n            setEditBody(post.body)\r\n        }\r\n    }, [post, setEditTitle, setEditBody])\r\n  return (\r\n    <main className=\"NewPost\">\r\n        {editTitle && \r\n            <>\r\n            \r\n    <h2>Edit Post</h2>\r\n    <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\r\n      <label htmlFor=\"postTittle\"> Edit Title </label>\r\n      <input\r\n        type=\"text\"\r\n        required\r\n        value={editTitle}\r\n        onChange={(e) => setEditTitle(e.target.value)}\r\n      />\r\n      <label htmlFor=\"postBody\"> Edit Body </label>\r\n      <textarea\r\n        id=\"postBody\"\r\n        required\r\n        value={editBody}\r\n        onChange={(e) => setEditBody(e.target.value)}\r\n      ></textarea>\r\n      <button type=\"submit\" onClick={() => handleEdit(post.id)}>Submit</button>\r\n    </form>\r\n            </>\r\n        }\r\n\r\n        {!editTitle && \r\n            <>\r\n                <h2>Post Not Found</h2>\r\n                <p>Well, that's disappointing</p>\r\n                <p>\r\n                    <Link to='/'>Visit our website</Link>\r\n                </p>\r\n            </>\r\n        }\r\n  </main>\r\n  )\r\n}\r\n\r\nexport default EditPost"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}